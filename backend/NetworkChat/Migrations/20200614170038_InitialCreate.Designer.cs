// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetworkChat.Models;

namespace NetworkChat.Migrations
{
    [DbContext(typeof(NetworkChatContext))]
    [Migration("20200614170038_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5");

            modelBuilder.Entity("NetworkChat.Models.Chat", b =>
                {
                    b.Property<uint>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("NetworkChat.Models.ChatMember", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint?>("ChatID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MemberType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChatID");

                    b.HasIndex("UserName");

                    b.ToTable("ChatMembers");
                });

            modelBuilder.Entity("NetworkChat.Models.FileInfo", b =>
                {
                    b.Property<string>("URL")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .HasColumnType("TEXT");

                    b.HasKey("URL");

                    b.ToTable("FileInfos");
                });

            modelBuilder.Entity("NetworkChat.Models.Message", b =>
                {
                    b.Property<uint>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint?>("ChatID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FromUserName")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ChatID");

                    b.HasIndex("FromUserName");

                    b.ToTable("Message");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Message");
                });

            modelBuilder.Entity("NetworkChat.Models.User", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NetworkChat.Models.FileMessage", b =>
                {
                    b.HasBaseType("NetworkChat.Models.Message");

                    b.Property<string>("FileURL")
                        .HasColumnType("TEXT");

                    b.HasIndex("FileURL");

                    b.HasDiscriminator().HasValue("FileMessage");
                });

            modelBuilder.Entity("NetworkChat.Models.ImageMessage", b =>
                {
                    b.HasBaseType("NetworkChat.Models.Message");

                    b.Property<string>("ImageURL")
                        .HasColumnType("TEXT");

                    b.HasIndex("ImageURL");

                    b.HasDiscriminator().HasValue("ImageMessage");
                });

            modelBuilder.Entity("NetworkChat.Models.TextMessage", b =>
                {
                    b.HasBaseType("NetworkChat.Models.Message");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("TextMessage");
                });

            modelBuilder.Entity("NetworkChat.Models.ChatMember", b =>
                {
                    b.HasOne("NetworkChat.Models.Chat", null)
                        .WithMany("Members")
                        .HasForeignKey("ChatID");

                    b.HasOne("NetworkChat.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserName");
                });

            modelBuilder.Entity("NetworkChat.Models.Message", b =>
                {
                    b.HasOne("NetworkChat.Models.Chat", null)
                        .WithMany("Messages")
                        .HasForeignKey("ChatID");

                    b.HasOne("NetworkChat.Models.User", "FromUser")
                        .WithMany()
                        .HasForeignKey("FromUserName");
                });

            modelBuilder.Entity("NetworkChat.Models.FileMessage", b =>
                {
                    b.HasOne("NetworkChat.Models.FileInfo", "File")
                        .WithMany()
                        .HasForeignKey("FileURL");
                });

            modelBuilder.Entity("NetworkChat.Models.ImageMessage", b =>
                {
                    b.HasOne("NetworkChat.Models.FileInfo", "Image")
                        .WithMany()
                        .HasForeignKey("ImageURL");
                });
#pragma warning restore 612, 618
        }
    }
}
