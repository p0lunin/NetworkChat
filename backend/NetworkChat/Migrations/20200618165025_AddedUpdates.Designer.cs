// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetworkChat.Models;

namespace NetworkChat.Migrations
{
    [DbContext(typeof(NetworkChatContext))]
    [Migration("20200618165025_AddedUpdates")]
    partial class AddedUpdates
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5");

            modelBuilder.Entity("NetworkChat.Models.Chat", b =>
                {
                    b.Property<uint>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("NetworkChat.Models.ChatMember", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint?>("ChatID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MemberType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChatID");

                    b.HasIndex("UserName");

                    b.ToTable("ChatMembers");
                });

            modelBuilder.Entity("NetworkChat.Models.FileInfo", b =>
                {
                    b.Property<string>("URL")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .HasColumnType("TEXT");

                    b.HasKey("URL");

                    b.ToTable("FileInfos");
                });

            modelBuilder.Entity("NetworkChat.Models.Message", b =>
                {
                    b.Property<uint>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint?>("ChatID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FromUserName")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ChatID");

                    b.HasIndex("FromUserName");

                    b.ToTable("Message");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Message");
                });

            modelBuilder.Entity("NetworkChat.Models.Update", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Updates");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Update");
                });

            modelBuilder.Entity("NetworkChat.Models.User", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NetworkChat.Models.FileMessage", b =>
                {
                    b.HasBaseType("NetworkChat.Models.Message");

                    b.Property<string>("FileURL")
                        .HasColumnType("TEXT");

                    b.HasIndex("FileURL");

                    b.HasDiscriminator().HasValue("FileMessage");
                });

            modelBuilder.Entity("NetworkChat.Models.ImageMessage", b =>
                {
                    b.HasBaseType("NetworkChat.Models.Message");

                    b.Property<string>("ImageURL")
                        .HasColumnType("TEXT");

                    b.HasIndex("ImageURL");

                    b.HasDiscriminator().HasValue("ImageMessage");
                });

            modelBuilder.Entity("NetworkChat.Models.TextMessage", b =>
                {
                    b.HasBaseType("NetworkChat.Models.Message");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("TextMessage");
                });

            modelBuilder.Entity("NetworkChat.Models.MessageUpdate", b =>
                {
                    b.HasBaseType("NetworkChat.Models.Update");

                    b.Property<uint?>("ChatID")
                        .HasColumnType("INTEGER");

                    b.Property<uint?>("NewMessageID")
                        .HasColumnType("INTEGER");

                    b.HasIndex("ChatID");

                    b.HasIndex("NewMessageID");

                    b.HasDiscriminator().HasValue("MessageUpdate");
                });

            modelBuilder.Entity("NetworkChat.Models.NewChatUpdate", b =>
                {
                    b.HasBaseType("NetworkChat.Models.Update");

                    b.Property<uint?>("NewChatID")
                        .HasColumnType("INTEGER");

                    b.HasIndex("NewChatID");

                    b.HasDiscriminator().HasValue("NewChatUpdate");
                });

            modelBuilder.Entity("NetworkChat.Models.NewMemberUpdate", b =>
                {
                    b.HasBaseType("NetworkChat.Models.Update");

                    b.Property<uint?>("ChatID")
                        .HasColumnName("NewMemberUpdate_ChatID")
                        .HasColumnType("INTEGER");

                    b.Property<uint?>("NewMemberId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("ChatID");

                    b.HasIndex("NewMemberId");

                    b.HasDiscriminator().HasValue("NewMemberUpdate");
                });

            modelBuilder.Entity("NetworkChat.Models.NewOnlineUserUpdate", b =>
                {
                    b.HasBaseType("NetworkChat.Models.Update");

                    b.Property<string>("NewOnlineUsername")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("NewOnlineUserUpdate");
                });

            modelBuilder.Entity("NetworkChat.Models.NewUserUpdate", b =>
                {
                    b.HasBaseType("NetworkChat.Models.Update");

                    b.Property<string>("NewUserName")
                        .HasColumnType("TEXT");

                    b.HasIndex("NewUserName");

                    b.HasDiscriminator().HasValue("NewUserUpdate");
                });

            modelBuilder.Entity("NetworkChat.Models.RemoveChatUpdate", b =>
                {
                    b.HasBaseType("NetworkChat.Models.Update");

                    b.Property<uint?>("RemoveChatID")
                        .HasColumnType("INTEGER");

                    b.HasIndex("RemoveChatID");

                    b.HasDiscriminator().HasValue("RemoveChatUpdate");
                });

            modelBuilder.Entity("NetworkChat.Models.RemoveMemberUpdate", b =>
                {
                    b.HasBaseType("NetworkChat.Models.Update");

                    b.Property<uint?>("ChatID")
                        .HasColumnName("RemoveMemberUpdate_ChatID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RemoveMemberUsername")
                        .HasColumnType("TEXT");

                    b.HasIndex("ChatID");

                    b.HasDiscriminator().HasValue("RemoveMemberUpdate");
                });

            modelBuilder.Entity("NetworkChat.Models.RemoveOnlineUserUpdate", b =>
                {
                    b.HasBaseType("NetworkChat.Models.Update");

                    b.Property<string>("RemoveOnlineUsername")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("RemoveOnlineUserUpdate");
                });

            modelBuilder.Entity("NetworkChat.Models.ChatMember", b =>
                {
                    b.HasOne("NetworkChat.Models.Chat", null)
                        .WithMany("Members")
                        .HasForeignKey("ChatID");

                    b.HasOne("NetworkChat.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserName");
                });

            modelBuilder.Entity("NetworkChat.Models.Message", b =>
                {
                    b.HasOne("NetworkChat.Models.Chat", null)
                        .WithMany("Messages")
                        .HasForeignKey("ChatID");

                    b.HasOne("NetworkChat.Models.User", "FromUser")
                        .WithMany()
                        .HasForeignKey("FromUserName");
                });

            modelBuilder.Entity("NetworkChat.Models.FileMessage", b =>
                {
                    b.HasOne("NetworkChat.Models.FileInfo", "File")
                        .WithMany()
                        .HasForeignKey("FileURL");
                });

            modelBuilder.Entity("NetworkChat.Models.ImageMessage", b =>
                {
                    b.HasOne("NetworkChat.Models.FileInfo", "Image")
                        .WithMany()
                        .HasForeignKey("ImageURL");
                });

            modelBuilder.Entity("NetworkChat.Models.MessageUpdate", b =>
                {
                    b.HasOne("NetworkChat.Models.Chat", "Chat")
                        .WithMany()
                        .HasForeignKey("ChatID");

                    b.HasOne("NetworkChat.Models.Message", "NewMessage")
                        .WithMany()
                        .HasForeignKey("NewMessageID");
                });

            modelBuilder.Entity("NetworkChat.Models.NewChatUpdate", b =>
                {
                    b.HasOne("NetworkChat.Models.Chat", "NewChat")
                        .WithMany()
                        .HasForeignKey("NewChatID");
                });

            modelBuilder.Entity("NetworkChat.Models.NewMemberUpdate", b =>
                {
                    b.HasOne("NetworkChat.Models.Chat", "Chat")
                        .WithMany()
                        .HasForeignKey("ChatID");

                    b.HasOne("NetworkChat.Models.ChatMember", "NewMember")
                        .WithMany()
                        .HasForeignKey("NewMemberId");
                });

            modelBuilder.Entity("NetworkChat.Models.NewUserUpdate", b =>
                {
                    b.HasOne("NetworkChat.Models.User", "NewUser")
                        .WithMany()
                        .HasForeignKey("NewUserName");
                });

            modelBuilder.Entity("NetworkChat.Models.RemoveChatUpdate", b =>
                {
                    b.HasOne("NetworkChat.Models.Chat", "RemoveChat")
                        .WithMany()
                        .HasForeignKey("RemoveChatID");
                });

            modelBuilder.Entity("NetworkChat.Models.RemoveMemberUpdate", b =>
                {
                    b.HasOne("NetworkChat.Models.Chat", "Chat")
                        .WithMany()
                        .HasForeignKey("ChatID");
                });
#pragma warning restore 612, 618
        }
    }
}
